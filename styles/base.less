@import "syntax-variables";
@import "octicon-utf-codes";
@import "octicon-mixins";

// Animated Brace Matching
@-webkit-keyframes bracketanimation {
  from  {
      border-width: 1px;
      border-color: rgba(222, 149, 54, 1);
      left: -1px;
      top: -1px;
  }
  50%   {
      border-width: 3px;
      border-color: rgba(222, 149, 54, 1);
      left: -1px;
      top: -1px;
  }
  to    {
      border-width: 1px;
      border-color: rgba(222, 149, 54, 0.5);
      left: 0px;
      top: 0px;
  }
}

.bracket-matcher .region {
    border-bottom: 0;
}

.bracket-matcher .region:after {
    content: "";
    -webkit-animation-name: bracketanimation;
    -webkit-animation-duration: .3s;
    border: 1px solid rgba(222, 149, 54, 0.5);
    border-style: solid;
    border-radius: 3px;
    background-color: rgba(255, 217, 0, 0.2);
    width: 100%;
    height: 100%;
    position: absolute;
}

atom-text-editor, atom-text-editor {

    // remove this if you don't want the active line highlighted
    // setting the default line messes with the animated bracket-matcher
    // matcher so will just remove this for now as the bracket matcher is nicer.

    /*.lines .line.cursor-line {
      background-color: @very-light-gray;
      color: @syntax-text-color;
    }*/

  background-color: @syntax-background-color;
  color: @syntax-text-color;

  .wrap-guide {
    background-color: @syntax-wrap-guide-color;
  }

  .indent-guide {
    color: @syntax-indent-guide-color;
  }

  .invisible-character {
    color: @syntax-invisible-character-color;
  }

  /* mess with gutter icons and state */

  .gutter:hover {
      .line-number.foldable .icon-right {
         .octicon(dash, 0.8em);
        visibility: visible;

        &:hover {
          opacity: 1;
        }
      }
    }

  .gutter, .gutter:hover {
     .line-number.folded .icon-right {
       .octicon(plus, 0.8em);

       visibility: visible;

       &::before {
         position: relative;
         left: -.1em;
       }
     }
   }

   .line {
      .fold-marker::after {
       color:@bright-red;
       /* display:none; */ /* Hide you don't like it */
     }

     .fold-marker {
         &::after {
             .icon(1.3em, inline);    /* make obvious, was  0.8em */
         }
     }
   }

   .gutter {
           .line-number.folded.foldable {  /* set the folded line number color to red */
         color:@bright-red;
     }
   }

   /* end of gutter marker hacks */

  .gutter {
    background-color: @syntax-gutter-background-color;
    color: @syntax-gutter-text-color;

    .line-number {
      &.cursor-line {
        background-color: @syntax-gutter-background-color-selected;
        color: @syntax-gutter-text-color-selected;
      }

      &.cursor-line-no-selection {
        color: @syntax-gutter-text-color-selected;
      }
    }
  }

  .gutter .line-number:after,
  .fold-marker:after {
    color: @light-gray;
  }

  .invisible {
    color: @syntax-text-color;
  }

  .cursor {
    color: @syntax-cursor-color;
  }

  .selection .region {
    background-color: @syntax-selection-color;
  }
}

atom-text-editor .search-results .syntax--marker .region,
atom-text-editor .search-results .syntax--marker .region {
  background-color: transparent;
  border: 1px solid @syntax-result-marker-color;
}

atom-text-editor .search-results .syntax--marker.current-result .region,
atom-text-editor .search-results .syntax--marker.current-result .region {
  border: 1px solid @syntax-result-marker-color-selected;
}

atom-text-editor .wrap-guide {
  width: 1px;
  background-color: #C2EBC2;
}

.syntax--comment {
  color: @bright-red;
}

.syntax--keyword {
  color: @blue;
  font-weight: bold;

  &.syntax--control {
    color: @blue;
  }

  &.syntax--operator {
    color: @syntax-text-color;
  }

  &.syntax--other.syntax--special-method {
    color: @blue;
  }

  &.syntax--other.syntax--unit {
    color: @orange;
  }
}

.syntax--storage {
  color: @blue;
  font-weight: bold;
}

.syntax--constant {
  color: @orange;

  &.syntax--php {
      color : @black;
  }

  &.syntax--character.syntax--escape {
    color: @cyan;
  }

  &.syntax--numeric {
    color: @green;
  }

  &.syntax--other.syntax--color {
    color: @cyan;
  }

  &.syntax--other.syntax--symbol {
    color: @green;
  }
}

.syntax--variable {
  color: @cyan;

  &.syntax--interpolation {
    color: darken(@red, 10%);
  }

  &.syntax--parameter.syntax--function {
    color: @syntax-text-color;
  }
}

.syntax--invalid.syntax--illegal {
  background-color: @red;
  color: @syntax-background-color;
}

.syntax--string {
  color: @orange;

  &.syntax--regexp {
    color: @cyan;

    .syntax--source.syntax--ruby.syntax--embedded {
      color: @orange;
    }
  }

  &.syntax--other.syntax--link {
    color: @red;
  }
}

.syntax--punctuation {
  &.syntax--definition {
    &.syntax--comment {
      color: @bright-red;
    }

    &.syntax--string,
    &.syntax--variable,
    &.syntax--parameters,
    &.syntax--array {
      color: @syntax-text-color;
    }

    &.syntax--variable.syntax--php {
        color: @cyan;
    }

    &.syntax--tag {
        color:@bright-blue;
    }

    &.syntax--heading,
    &.syntax--identity {
      color: @blue;
    }

    &.syntax--bold {
      color: @light-orange;
      font-weight: bold;
    }

    &.syntax--italic {
      color: @purple;
      font-style: italic;
    }
  }

  &.syntax--section.syntax--embedded {
    color: @green;
  }

}

.syntax--support {
  &.syntax--class {
    color: @black;
  }

  &.syntax--property-name
  {
      color:@red;
      font-weight: bold;
  }

  &.syntax--property-value
  {
      font-weight: bold;
  }

  &.syntax--function  {
    color: @black;

    &.syntax--any-method {
      color: @blue;
    }
  }
}

.syntax--entity {
  &.syntax--name.syntax--function {
    color: @blue;
  }

  &.syntax--name.syntax--type {
    color: @black;
  }

  &.syntax--other.syntax--inherited-class {
    color: @black;
  }

  &.syntax--name.syntax--class, &.syntax--name.syntax--type.syntax--class {
    color: @black;
  }

  &.syntax--name.syntax--section {
    color: @blue;
  }

  &.syntax--name.syntax--tag {
    color: @bright-blue;
    font-weight: bold;
  }

  &.syntax--other.syntax--attribute-name {
    color: @blue;
    font-weight: bold;

    &.syntax--id {
      color: @blue;
    }
  }
}

.syntax--meta {
  &.syntax--class {
    color: @light-orange;
  }

  &.syntax--link {
    color: @orange;
  }

  &.syntax--require {
    color: @blue;
  }

  &.syntax--selector {
    color: @purple;
  }

  &.syntax--selector.syntax--css {
      color:@black;
  }

  &.syntax--separator {
    background-color: @black;
    color: @syntax-text-color;
  }
}

.syntax--none {
  color: @syntax-text-color;
}

.syntax--markup {
  &.syntax--bold {
    color: @orange;
    font-weight: bold;
  }

  &.syntax--changed {
    color: @purple;
  }

  &.syntax--deleted {
    color: @red;
  }

  &.syntax--italic {
    color: @purple;
    font-style: italic;
  }

  &.syntax--heading .syntax--punctuation.syntax--definition.syntax--heading {
    color: @blue;
  }

  &.syntax--inserted {
    color: @green;
  }

  &.syntax--list {
    color: @red;
  }

  &.syntax--quote {
    color: @orange;
  }

  &.syntax--raw.syntax--inline {
    color: @green;
  }
}

.syntax--source.syntax--gfm .syntax--markup {
  -webkit-font-smoothing: auto;
  &.syntax--heading {
    color: @green;
  }
}

atom-text-editor[mini] .scroll-view,
atom-text-editor .scroll-view {
  padding-left: 1px;
}
